[metadata]
name = mixt
description =  Write html components directly in python and you have a beautiful but controversial MIXTure
long_description = file:README.rst
version = 1.2.2
author = StÃ©phane "Twidi" Angel
author_email = s.angel@twidi.com
license = MIT
classifiers =
    Development Status :: 5 - Production/Stable
    License :: OSI Approved :: MIT License
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3 :: Only
keywords =
    python
    html
    components
    templating
    web-components
    react-style
url = https://github.com/twidi/mixt
requires-python = >=3.6

[options]
zip_safe = True
packages = find:
package_dir =
    =src
install_requires =
    wrapt

[options.packages.find]
where = src

[options.entry_points]
console_scripts =
  mixt-post-install = mixt.scripts.mixt_post_install:main
  parse-mixt = mixt.scripts.parse_file:main
  mixt = mixt.scripts.run_file:main

[options.extras_require]
dev =
    black
    factory_boy
    flake8
    flake8-bugbear
    flake8-comprehensions
    flake8-formatter-abspath
    flake8-imports
    flake8-docstrings
    flake8-pep3101
    ipython
    isort
    mypy
    patchy
    pycodestyle
    pydocstyle
    pylint
    pytest
    twine
    wheel

test =
    factory_boy
    pytest

doc =
    bottle
    inspect_mate
    numpydoc
    pygments
    python-slugify

[bdist_wheel]
universal = 1

[mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
# because of django models for example
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
python_version = 3.6
strict_optional = true
warn_incomplete_stub = true

[mypy-src.mixt.codec.*]
# ignore imported pyxl code
ignore_errors = True

[mypy-src.mixt.examples.*]
# ignore our examples to keep then clean
ignore_errors = True
[mypy-xml.*,runpy,decimal,fractions,numbers]
# strange modules with errors from mypy
ignore_errors = True

[mypy-src.mixt.vendor.*]
# ignore vendored code
ignore_errors = True

[flake8]
ignore =
    # Line too long: we let black manage it
    E501
    # Line break occurred before a binary operator: we let black manage it
    W503
    # "Missing docstring in public nested class" in pydocstyle. We let pylint manage it
    # because we can tell it to ignore ``PropTypes``
    D106
    # Allow assigning lambda expressions
    E731
    # "Multiple statements on one line" raised for ``var: type`` lines
    E701
    E704
max-line-length = 99
max-complexity = 15
select =
    # flake8 error class
    F
    # mccabe plugin
    C
    # pycodestyle plugin
    E
    W
    # docstrings (using pydocstyle) plugin
    D
    # bugbear plugin
    B
    B9
    B950
    # pep3101 (enforce .format over %) plugin
    S001
exclude =
    stubs.py
    docs/
    *.egg-info
    dist/
    build/
    src/mixt/codec/
    src/mixt/vendor/
    tests/pyxl/original/
per-file-ignores =
    # ignore mypy missing annotations in tests
    tests/**/test_*:T484
    # ignore code formating problems in our mixt files
    # and also "W292 no newline at end of file" which is a strange problem with the mixt parser
    src/mixt/examples/**/*.py:E,W291,W292
    # we may have long lines in css keywords list
    src/mixt/contrib/css/css_keywords_list.py:B950
    # allow % formatting for templating when string contains "{" or "}"
    src/mixt/contrib/css/rendering.py:S001

[pycodestyle]
max-line-length = 99

[tool:pytest]
addopts =
    --doctest-modules
    --ignore setup.py
    --ignore vendor
    --pyargs

[coverage:run]
branch = True

[tool:isort]
combine_as_imports=1
default_section=THIRDPARTY
force_sort_within_sections=1
from_first=1
include_trailing_comma=1
indent='    '
known_first_party=mixt
line_length=88
lines_after_imports=2
multi_line_output=3
not_skip = __init__.py
sections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
use_parentheses=1
skip=vendor,codec
